/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetLinkInfoRequest = {
    /**
     * The domain of the link to retrieve. E.g. for `d.to/github`, the domain is `d.to`.
     */
    domain: string;
    /**
     * The key of the link to retrieve. E.g. for `d.to/github`, the key is `github`.
     */
    key: string;
};

/** @internal */
export namespace GetLinkInfoRequest$ {
    export type Inbound = {
        domain: string;
        key: string;
    };

    export const inboundSchema: z.ZodType<GetLinkInfoRequest, z.ZodTypeDef, Inbound> = z
        .object({
            domain: z.string(),
            key: z.string(),
        })
        .transform((v) => {
            return {
                domain: v.domain,
                key: v.key,
            };
        });

    export type Outbound = {
        domain: string;
        key: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLinkInfoRequest> = z
        .object({
            domain: z.string(),
            key: z.string(),
        })
        .transform((v) => {
            return {
                domain: v.domain,
                key: v.key,
            };
        });
}
